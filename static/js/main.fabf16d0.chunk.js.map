{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistic.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","name","key","shortid","generate","onClick","className","styled","btn","Statistic","label","value","Notification","message","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Section","title","handleLeaveFeedback","App","state","e","target","setState","prevState","Math","round","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qUA4BeA,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,4BACEC,KAAK,SACLC,KAAMF,EACNG,IAAKC,IAAQC,WACbC,QAASV,EACTW,UAAWC,IAAOC,KAEjBT,QCEIU,EAfG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1B,OACE,oCACE,2BACGD,EADH,IACWC,KCIFC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,2BAAIA,ICqCEC,EApCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,iCACE,0CACCD,EAAqB,EACpB,oCACE,kBAAC,EAAD,CAAWR,MAAM,OAAOC,MAAOI,IAC/B,kBAAC,EAAD,CAAWL,MAAM,UAAUC,MAAOK,IAClC,kBAAC,EAAD,CAAWN,MAAM,MAAMC,MAAOM,IAC9B,kBAAC,EAAD,CAAWP,MAAM,QAAQC,MAAOO,IAChC,kBAAC,EAAD,CACER,MAAM,oBACNC,MAAK,UAAKQ,EAAL,QAIT,kBAAC,EAAD,CAAcN,QAAQ,wBCiBfO,EAvCC,SAAC,GASV,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,oBACA5B,EAMI,EANJA,QACAqB,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,oCACE,4BAAKE,GACL,kBAAC,EAAD,CACE3B,QAASA,EACTC,gBAAiB2B,IAEnB,kBAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBA,EACpBC,gCAAiCA,MCe1BI,E,2MAtCbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,oBAAsB,SAAAG,GAAM,IAClBxB,EAASwB,EAAEC,OAAXzB,KACR,EAAK0B,UAAS,SAAAC,GAAS,sBACpB3B,EAAO2B,EAAU3B,GAAQ,O,EAI9BiB,mBAAqB,kBACnB,EAAKM,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAEpDE,gCAAkC,kBAChCU,KAAKC,MAAO,EAAKN,MAAMT,KAAO,EAAKG,qBAAwB,M,wEAEnD,IAAD,EACwBa,KAAKP,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CACEI,MAAM,wBACNN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLK,oBAAqBS,KAAKT,oBAC1B5B,QAAS,CAAEqB,OAAMC,UAASC,OAC1BC,mBAAoBa,KAAKb,qBACzBC,gCAAiCY,KAAKZ,yC,GAhC9Ba,a,MCGlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.fabf16d0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styled from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {Object.keys(options).map(option => (\n        <button\n          type=\"button\"\n          name={option}\n          key={shortid.generate()}\n          onClick={onLeaveFeedback}\n          className={styled.btn}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({}).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ label, value }) => {\n  return (\n    <>\n      <p>\n        {label} {value}\n      </p>\n    </>\n  );\n};\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from './Statistic';\nimport Notification from '../Notification/Notification';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <section>\n      <h2>Statistics</h2>\n      {countTotalFeedback > 0 ? (\n        <>\n          <Statistic label=\"Good\" value={good} />\n          <Statistic label=\"Neutral\" value={neutral} />\n          <Statistic label=\"Bad\" value={bad} />\n          <Statistic label=\"Total\" value={countTotalFeedback} />\n          <Statistic\n            label=\"Positive Feedback\"\n            value={`${countPositiveFeedbackPercentage}%`}\n          />\n        </>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedback: PropTypes.number.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\n\nconst Section = ({\n  title,\n  handleLeaveFeedback,\n  options,\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <>\n      <h1>{title}</h1>\n      <FeedbackOptions\n        options={options}\n        onLeaveFeedback={handleLeaveFeedback}\n      />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        countTotalFeedback={countTotalFeedback}\n        countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n      />\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  handleLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.shape({}).isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedback: PropTypes.number.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section\n          title=\"Please leave feedback\"\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          handleLeaveFeedback={this.handleLeaveFeedback}\n          options={{ good, neutral, bad }}\n          countTotalFeedback={this.countTotalFeedback()}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './components/App';\nimport './main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__LOh7w\"};"],"sourceRoot":""}